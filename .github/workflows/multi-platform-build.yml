name: Multi-Platform Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        platform: [macos, windows, linux, ios, android, web]  # 平行运行的平台矩阵
        os: [macos-latest, windows-latest, ubuntu-latest]  # 定义在哪些操作系统运行
      fail-fast: false  # 让所有平台的任务都尝试运行，不因为其中一个失败而停止

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build for ${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "macos" && "${{ matrix.os }}" == "macos-latest" ]]; then
            flutter build macos
          elif [[ "${{ matrix.platform }}" == "windows" && "${{ matrix.os }}" == "windows-latest" ]]; then
            flutter build windows
          elif [[ "${{ matrix.platform }}" == "linux" && "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter build linux
          elif [[ "${{ matrix.platform }}" == "ios" && "${{ matrix.os }}" == "macos-latest" ]]; then
            flutter build ios --no-codesign
          elif [[ "${{ matrix.platform }}" == "android" && "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            flutter build apk
          elif [[ "${{ matrix.platform }}" == "web" ]]; then
            flutter build web
          fi

      - name: Upload Build Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: |
            build/macos/runner.app
            build/windows/runner.exe
            build/linux/runner
            build/ios/Runner.app
            build/app/outputs/flutter-apk/app-release.apk
            build/web