name: Multi-Platform Build

on:
  push:
    branches:
      - main
      - uat
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - uat
      - dev

env:
  name: TXT-Reader
  raw_name: txt_reader

jobs:
  # Windows 构建任务：只编译 Windows 应用
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 安装 yq
      - name: Install yq
        run: choco install yq

      # 安装 Inno Setup
      - name: Install Inno Setup
        run: choco install innosetup

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows

      - name: List files
        run: ls -R build\windows\x64\runner\Release

      # 重命名生成的 exe 文件
      - name: Rename executable
        run: move build\windows\x64\runner\Release\txt_reader.exe build\windows\x64\runner\Release\${{ env.name }}.exe

      # 创建 Inno Setup 脚本文件
      - name: Create Inno Setup Script
        run: |
          Set-Content -Path windows-installer.iss -Value "[Setup]"
          Add-Content -Path windows-installer.iss -Value "AppName=${{ env.name }}"
          Add-Content -Path windows-installer.iss -Value "AppVersion=1.0"
          Add-Content -Path windows-installer.iss -Value "DefaultDirName={pf}\${{ env.name }}"
          Add-Content -Path windows-installer.iss -Value "DefaultGroupName=${{ env.name }}"
          Add-Content -Path windows-installer.iss -Value "OutputDir=build/windows/installer"
          Add-Content -Path windows-installer.iss -Value "OutputBaseFilename=${{ env.name }}_installer"
          Add-Content -Path windows-installer.iss -Value "[Files]"
          Add-Content -Path windows-installer.iss -Value 'Source: "build\\windows\\x64\\runner\\Release\\${{ env.name }}.exe"; DestDir: "{app}"; Flags: ignoreversion'
          Add-Content -Path windows-installer.iss -Value 'Source: "build\\windows\\x64\\runner\\Release\\*"; DestDir: "{app}"; Flags: ignoreversion'
          Add-Content -Path windows-installer.iss -Value "[Icons]"
          Add-Content -Path windows-installer.iss -Value 'Name: "{group}\${{ env.name }}"; Filename: "{app}\${{ env.name }}.exe"'

      - name: Run Inno Setup Compiler
        run: iscc windows-installer.iss

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/installer/${{ env.name }}_installer.exe
          retention-days: 3

  # macOS 构建任务
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      # 编译 macOS
      - name: Build macOS
        run: flutter build macos --release

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG file
        run: |
          mkdir -p build/macos/dmg
          create-dmg \
            --volname "${{ env.name }}" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "${{ env.raw_name }}.app" 200 190 \
            --app-drop-link 600 185 \
            --skip-jenkins \
            "build/macos/dmg/${{ env.name }}.dmg" \
            "build/macos/Build/Products/Release/${{ env.raw_name }}.app"

      # 上传 macOS 构建产物
      - name: Upload macOS Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/dmg/${{ env.name }}.dmg
          retention-days: 3

    # iOS 构建任务
#   build-ios:
#     runs-on: macos-latest
#     steps:
#       - name: Monitor Resource Usage
#         run: vm_stat

#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: stable
#           flutter-version-file: pubspec.yaml

#       - name: Install dependencies
#         run: flutter pub get

#       # 编译 iOS
#       - name: Build iOS
#         run: flutter build ios --no-codesign

#       # 创建并打包为未签名的 IPA
#       - name: Archive and Export IPA
#         run: |
#             mkdir -p build/ios/ipa

#             xcodebuild -quiet archive -workspace ios/Runner.xcworkspace -scheme Runner archive \
#             -configuration Release -sdk iphoneos \
#             -archivePath build/ios/archive/Runner.xcarchive \
#             CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -jobs 1

#       - name: Export IPA
#         run: |
#             xcodebuild -exportArchive -archivePath build/ios/archive/Runner.xcarchive \
#             -exportPath build/ios/ipa \
#             -exportOptionsPlist ExportOptions.plist \
#             -allowProvisioningUpdates \
#             CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -jobs 1 -verbose

#       - name: Rename IPA
#         run: |
#             mv build/ios/ipa/Runner.ipa build/ios/ipa/${{ env.name }}.ipa

#         # 上传 iOS 构建产物
#       - name: Upload iOS Build Artifacts
#         uses: actions/upload-artifact@v4
#         with:
#             name: ios-build
#             path: build/ios/ipa/${{ env.name }}.ipa
#             retention-days: 3

    # Android 构建任务
  build-android:
    runs-on: macos-latest
    steps:
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      # 编译 Android
      - name: Build Android
        run: flutter build apk

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/${{ env.name }}.apk

      # 上传 Android 构建产物
      - name: Upload Android Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: build/app/outputs/flutter-apk/${{ env.name }}.apk
          retention-days: 3
    
  # Linux 构建任务：只编译 Linux 应用
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq using snap
        run: sudo snap install yq

      - name: Install dependencies for Linux build
        run: sudo apt-get install -y cmake ninja-build gcc g++ libgtk-3-dev

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux
        run: flutter build linux

      - name: Rename executable
        run: |
          mv build/linux/x64/release/bundle/${{ env.raw_name }} build/linux/x64/release/bundle/${{ env.name }}

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/${{ env.name }}
          retention-days: 3