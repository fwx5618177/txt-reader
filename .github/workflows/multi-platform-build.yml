name: Multi-Platform Build

on:
  push:
    branches:
      - main
      - uat
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - uat
      - dev

env:
  name: TXT-Reader
  raw_name: txt_reader

jobs:
  # 通用的依赖安装和缓存步骤
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
            path: |
                ~/.pub-cache
                flutter/bin/cache
            key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
            restore-keys: |
                ${{ runner.os }}-flutter-

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
            channel: stable
            flutter-version-file: pubspec.yaml

      - name: Install dependencies (pub get)
        run: flutter pub get

      - name: Debug pub-cache path
        run: ls -la ${{ runner.home }}/.pub-cache

      # 保存缓存供后续平台构建使用
      - name: Upload dependencies cache
        uses: actions/upload-artifact@v4
        with:
            name: dependencies-cache
            path: ${{ runner.home }}/.pub-cache

  # Windows 构建任务：只编译 Windows 应用
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 安装 yq
      - name: Install yq
        run: choco install yq

      # 下载依赖项缓存
      - name: Download dependencies cache
        uses: actions/download-artifact@v4
        with:
          name: dependencies-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build/
          key: windows-build-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            windows-build-

      - name: Build Windows
        run: flutter build windows

      # 重命名生成的 exe 文件
      - name: Rename executable
        run: |
            move build\windows\x64\runner\Release\txt_reader.exe build\windows\x64\runner\Release\${{ env.name }}.exe

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build\windows\x64\runner\Release\${{ env.name }}.exe

  # macOS 构建任务
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 下载依赖项缓存
      - name: Download dependencies cache
        uses: actions/download-artifact@v4
        with:
          name: dependencies-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build/
          key: macos-build-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            macos-build-

      # 编译 macOS
      - name: Build macOS
        run: flutter build macos --release

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create DMG file
        run: |
          mkdir -p build/macos/dmg
          create-dmg \
            --volname "${{ env.name }}" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "${{ env.raw_name }}.app" 200 190 \
            --app-drop-link 600 185 \
            --skip-jenkins \
            "build/macos/dmg/${{ env.name }}.dmg" \
            "build/macos/Build/Products/Release/${{ env.raw_name }}.app"

      # 上传 macOS 构建产物
      - name: Upload macOS Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/macos/dmg/${{ env.name }}.dmg

    # iOS 构建任务
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Monitor Resource Usage
        run: vm_stat
        
      - name: Checkout code
        uses: actions/checkout@v4

      # 下载依赖项缓存
      - name: Download dependencies cache
        uses: actions/download-artifact@v4
        with:
          name: dependencies-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build/
          key: ios-build-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ios-build-

      # 编译 iOS
      - name: Build iOS
        run: flutter build ios --release --no-codesign

      # 创建并打包为未签名的 IPA
      - name: Archive IPA
        run: |
            mkdir -p build/ios/ipa

            xcodebuild -quiet archive -workspace ios/Runner.xcworkspace -scheme Runner archive \
            -configuration Release -sdk iphoneos \
            -archivePath build/ios/archive/Runner.xcarchive \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -jobs 1

      - name: Export IPA
        run: |
            xcodebuild -exportArchive -archivePath build/ios/archive/Runner.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist ExportOptions.plist \
            CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO -jobs 1 -verbose

      - name: Rename IPA
        run: |
            mv build/ios/ipa/Runner.ipa build/ios/ipa/${{ env.name }}.ipa

        # 上传 iOS 构建产物
      - name: Upload iOS Build Artifacts
        uses: actions/upload-artifact@v4
        with:
            name: ios-build
            path: build/ios/ipa/${{ env.name }}.ipa

    # Android 构建任务
  build-android:
    runs-on: macos-latest
    steps:
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v4

      # 下载依赖项缓存
      - name: Download dependencies cache
        uses: actions/download-artifact@v4
        with:
          name: dependencies-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build/
          key: android-build-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            android-build-

      # 编译 Android
      - name: Build Android
        run: flutter build apk

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/${{ env.name }}.apk

      # 上传 Android 构建产物
      - name: Upload Android Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: build/app/outputs/flutter-apk/${{ env.name }}.apk
    
  # Linux 构建任务：只编译 Linux 应用
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq using snap
        run: sudo snap install yq

      - name: Install dependencies for Linux build
        run: sudo apt-get install -y cmake ninja-build gcc g++ libgtk-3-dev

      # 下载依赖项缓存
      - name: Download dependencies cache
        uses: actions/download-artifact@v4
        with:
          name: dependencies-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: build/
          key: linux-build-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            linux-build-

      - name: Build Linux
        run: flutter build linux

      - name: Rename executable
        run: |
          mv build/linux/x64/release/bundle/${{ env.raw_name }} build/linux/x64/release/bundle/${{ env.name }}

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/${{ env.name }}