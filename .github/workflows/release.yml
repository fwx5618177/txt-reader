name: Release to GitHub

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Multi-Platform Build"]
    types:
      - completed

env:
  name: "TXT-Reader"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 下载 Windows 构建产物
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: ./artifacts/windows
          run-id: ${{ github.event.workflow_run.id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 解压 Windows 构建产物
      - name: Unzip Windows Build
        run: unzip -o ./artifacts/windows/windows-build.zip -d ./artifacts/windows/

      # 下载 macOS 构建产物
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: ./artifacts/macos
          run-id: ${{ github.event.workflow_run.id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 解压 macOS 构建产物
      - name: Unzip macOS Build
        run: unzip -o ./artifacts/macos/macos-build.zip -d ./artifacts/macos/

      # 下载 Android 构建产物
      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-build
          path: ./artifacts/android
          run-id: ${{ github.event.workflow_run.id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 解压 Android 构建产物
      - name: Unzip Android Build
        run: unzip -o ./artifacts/android/android-build.zip -d ./artifacts/android/

      # 下载 Linux 构建产物
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: ./artifacts/linux
          run-id: ${{ github.event.workflow_run.id }}
          repository: ${{ github.repository }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # 解压 Linux 构建产物
      - name: Unzip Linux Build
        run: unzip -o ./artifacts/linux/linux-build.zip -d ./artifacts/linux/

      # 列出解压后的文件
      - name: List artifacts
        run: |
          ls -R ./artifacts

      # 生成 Release Notes
      - name: Generate Release Notes
        run: |
            echo "## Release Notes" > CHANGE.md
            echo "" >> CHANGE.md
            echo "### Changes in this release:" >> CHANGE.md
            git log -1 --pretty=format:"* %s" >> CHANGE.md
            echo "" >> CHANGE.md
            echo "Generated on $(date)" >> CHANGE.md

      # 创建并上传 Release
      - name: Create and Upload Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          bodyFile: CHANGE.md
          allowUpdates: true
          replacesArtifacts: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
            ./artifacts/windows/${{ env.name }}.exe
            ./artifacts/macos/${{ env.name }}.dmg
            ./artifacts/android/${{ env.name }}.apk
            ./artifacts/linux/${{ env.name }}
          artifactContentType: |
            application/octet-stream
            application/x-apple-diskimage
            application/vnd.android.package-archive
            application/octet-stream
          skipIfReleaseExists: false
          makeLatest: true